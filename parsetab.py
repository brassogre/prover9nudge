
# parsetab.py
# This file is automatically generated. Do not edit.
_tabversion = '3.2'

_lr_method = 'LALR'

_lr_signature = '\xfbS(Z\x14T\xbb\xaf\x9ca\xa1/\x99\xe3\x0c0'
    
_lr_action_items = {'NOT_EQUAL':([1,8,14,27,],[10,21,-19,-24,]),'NAME':([0,4,10,11,13,17,19,21,22,28,],[1,16,24,26,30,1,1,35,37,40,]),')':([12,25,26,27,38,39,40,],[27,-21,-20,-24,-19,-23,-22,]),'(':([1,16,24,26,30,35,37,40,],[11,11,11,11,11,11,11,11,]),'-':([0,17,19,],[4,4,4,]),',':([12,25,26,27,38,39,40,],[28,-21,-20,-24,-19,-23,-22,]),'.':([2,5,6,7,9,14,15,23,24,27,29,30,31,32,33,34,35,36,37,38,],[-8,-6,18,20,-7,-10,-5,-17,-18,-24,-13,-14,-10,-4,-3,-15,-16,-11,-12,-19,]),'=':([1,8,14,27,],[13,22,-19,-24,]),'|':([2,5,6,7,9,14,15,23,24,27,29,30,31,32,33,34,35,36,37,38,],[-8,-6,17,19,-7,-10,-5,-17,-18,-24,-13,-14,-10,-4,-3,-15,-16,-11,-12,-19,]),'$end':([3,18,20,],[0,-2,-1,]),}

_lr_action = { }
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = { }
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'finished_argument_list':([1,16,24,26,30,35,37,40,],[14,31,38,38,38,38,38,38,]),'non_unit_clause':([0,],[6,]),'clause':([0,],[3,]),'predicate_expression':([0,4,17,19,],[5,15,5,5,]),'negated_equality_expression':([0,17,19,],[2,2,2,]),'argument_list':([1,16,24,26,30,35,37,40,],[12,12,12,12,12,12,12,12,]),'unit_clause':([0,17,19,],[7,32,33,]),'function_expression':([0,10,11,13,17,19,21,22,28,],[8,23,25,29,8,8,34,36,39,]),'equality_expression':([0,17,19,],[9,9,9,]),}

_lr_goto = { }
for _k, _v in _lr_goto_items.items():
   for _x,_y in zip(_v[0],_v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = { }
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> clause","S'",1,None,None,None),
  ('clause -> unit_clause .','clause',2,'p_clause','/Users/zernst/projects/prover9nudge/ladrParser.py',20),
  ('clause -> non_unit_clause .','clause',2,'p_clause','/Users/zernst/projects/prover9nudge/ladrParser.py',21),
  ('non_unit_clause -> unit_clause | unit_clause','non_unit_clause',3,'p_non_unit_clause','/Users/zernst/projects/prover9nudge/ladrParser.py',25),
  ('non_unit_clause -> non_unit_clause | unit_clause','non_unit_clause',3,'p_non_unit_clause','/Users/zernst/projects/prover9nudge/ladrParser.py',26),
  ('unit_clause -> - predicate_expression','unit_clause',2,'p_unit_clause','/Users/zernst/projects/prover9nudge/ladrParser.py',30),
  ('unit_clause -> predicate_expression','unit_clause',1,'p_unit_clause','/Users/zernst/projects/prover9nudge/ladrParser.py',31),
  ('unit_clause -> equality_expression','unit_clause',1,'p_unit_clause','/Users/zernst/projects/prover9nudge/ladrParser.py',32),
  ('unit_clause -> negated_equality_expression','unit_clause',1,'p_unit_clause','/Users/zernst/projects/prover9nudge/ladrParser.py',33),
  ('negated_predicate -> - predicate_expression','negated_predicate',2,'p_negated_predicate','/Users/zernst/projects/prover9nudge/ladrParser.py',40),
  ('predicate_expression -> NAME finished_argument_list','predicate_expression',2,'p_predicate_expression','/Users/zernst/projects/prover9nudge/ladrParser.py',44),
  ('equality_expression -> function_expression = function_expression','equality_expression',3,'p_equality_expression','/Users/zernst/projects/prover9nudge/ladrParser.py',50),
  ('equality_expression -> function_expression = NAME','equality_expression',3,'p_equality_expression','/Users/zernst/projects/prover9nudge/ladrParser.py',51),
  ('equality_expression -> NAME = function_expression','equality_expression',3,'p_equality_expression','/Users/zernst/projects/prover9nudge/ladrParser.py',52),
  ('equality_expression -> NAME = NAME','equality_expression',3,'p_equality_expression','/Users/zernst/projects/prover9nudge/ladrParser.py',53),
  ('negated_equality_expression -> function_expression NOT_EQUAL function_expression','negated_equality_expression',3,'p_negated_equality_expression','/Users/zernst/projects/prover9nudge/ladrParser.py',59),
  ('negated_equality_expression -> function_expression NOT_EQUAL NAME','negated_equality_expression',3,'p_negated_equality_expression','/Users/zernst/projects/prover9nudge/ladrParser.py',60),
  ('negated_equality_expression -> NAME NOT_EQUAL function_expression','negated_equality_expression',3,'p_negated_equality_expression','/Users/zernst/projects/prover9nudge/ladrParser.py',61),
  ('negated_equality_expression -> NAME NOT_EQUAL NAME','negated_equality_expression',3,'p_negated_equality_expression','/Users/zernst/projects/prover9nudge/ladrParser.py',62),
  ('function_expression -> NAME finished_argument_list','function_expression',2,'p_function_expression','/Users/zernst/projects/prover9nudge/ladrParser.py',69),
  ('argument_list -> ( NAME','argument_list',2,'p_argument_list_atomic_1','/Users/zernst/projects/prover9nudge/ladrParser.py',75),
  ('argument_list -> ( function_expression','argument_list',2,'p_argument_list_atomic_2','/Users/zernst/projects/prover9nudge/ladrParser.py',81),
  ('argument_list -> argument_list , NAME','argument_list',3,'p_argument_list_molecular_1','/Users/zernst/projects/prover9nudge/ladrParser.py',85),
  ('argument_list -> argument_list , function_expression','argument_list',3,'p_argument_list_molecular_2','/Users/zernst/projects/prover9nudge/ladrParser.py',90),
  ('finished_argument_list -> argument_list )','finished_argument_list',2,'p_finished_argument_list','/Users/zernst/projects/prover9nudge/ladrParser.py',94),
]
