
# parsetab.py
# This file is automatically generated. Do not edit.
_tabversion = '3.2'

_lr_method = 'LALR'

_lr_signature = b'\xb6\xa0\xcbh\xf7x\xbcL7o+3+h\xe3\xdb'
    
_lr_action_items = {'(':([7,10,25,29,33,],[16,16,16,16,16,]),'-':([0,12,14,],[1,1,1,]),',':([18,24,25,26,31,32,33,],[27,-15,-14,-18,-13,-17,-16,]),'NOT_EQUAL':([8,17,26,],[20,-13,-18,]),'.':([2,3,5,6,9,11,17,21,22,23,26,28,30,31,],[-8,13,-7,15,-6,-5,-10,-10,-3,-4,-18,-11,-12,-13,]),'=':([8,17,26,],[19,-13,-18,]),'|':([2,3,5,6,9,11,17,21,22,23,26,28,30,31,],[-8,12,-7,14,-6,-5,-10,-10,-3,-4,-18,-11,-12,-13,]),')':([18,24,25,26,31,32,33,],[26,-15,-14,-18,-13,-17,-16,]),'NAME':([0,1,12,14,16,19,20,27,],[7,10,7,7,25,29,29,33,]),'$end':([4,13,15,],[0,-1,-2,]),}

_lr_action = { }
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = { }
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'equality_expression':([0,12,14,],[5,5,5,]),'clause':([0,],[4,]),'argument_list':([7,10,25,29,33,],[18,18,18,18,18,]),'finished_argument_list':([7,10,25,29,33,],[17,21,31,31,31,]),'function_expression':([0,12,14,16,19,20,27,],[8,8,8,24,28,30,32,]),'non_unit_clause':([0,],[6,]),'unit_clause':([0,12,14,],[3,22,23,]),'negated_equality_expression':([0,12,14,],[2,2,2,]),'predicate_expression':([0,1,12,14,],[9,11,9,9,]),}

_lr_goto = { }
for _k, _v in _lr_goto_items.items():
   for _x,_y in zip(_v[0],_v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = { }
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> clause","S'",1,None,None,None),
  ('clause -> unit_clause .','clause',2,'p_clause','C:\\Users\\10034888\\Workspace\\prover9nudge\\ladrParser.py',20),
  ('clause -> non_unit_clause .','clause',2,'p_clause','C:\\Users\\10034888\\Workspace\\prover9nudge\\ladrParser.py',21),
  ('non_unit_clause -> unit_clause | unit_clause','non_unit_clause',3,'p_non_unit_clause','C:\\Users\\10034888\\Workspace\\prover9nudge\\ladrParser.py',25),
  ('non_unit_clause -> non_unit_clause | unit_clause','non_unit_clause',3,'p_non_unit_clause','C:\\Users\\10034888\\Workspace\\prover9nudge\\ladrParser.py',26),
  ('unit_clause -> - predicate_expression','unit_clause',2,'p_unit_clause','C:\\Users\\10034888\\Workspace\\prover9nudge\\ladrParser.py',30),
  ('unit_clause -> predicate_expression','unit_clause',1,'p_unit_clause','C:\\Users\\10034888\\Workspace\\prover9nudge\\ladrParser.py',31),
  ('unit_clause -> equality_expression','unit_clause',1,'p_unit_clause','C:\\Users\\10034888\\Workspace\\prover9nudge\\ladrParser.py',32),
  ('unit_clause -> negated_equality_expression','unit_clause',1,'p_unit_clause','C:\\Users\\10034888\\Workspace\\prover9nudge\\ladrParser.py',33),
  ('negated_predicate -> - predicate_expression','negated_predicate',2,'p_negated_predicate','C:\\Users\\10034888\\Workspace\\prover9nudge\\ladrParser.py',40),
  ('predicate_expression -> NAME finished_argument_list','predicate_expression',2,'p_predicate_expression','C:\\Users\\10034888\\Workspace\\prover9nudge\\ladrParser.py',44),
  ('equality_expression -> function_expression = function_expression','equality_expression',3,'p_equality_expression','C:\\Users\\10034888\\Workspace\\prover9nudge\\ladrParser.py',50),
  ('negated_equality_expression -> function_expression NOT_EQUAL function_expression','negated_equality_expression',3,'p_negated_equality_expression','C:\\Users\\10034888\\Workspace\\prover9nudge\\ladrParser.py',56),
  ('function_expression -> NAME finished_argument_list','function_expression',2,'p_function_expression','C:\\Users\\10034888\\Workspace\\prover9nudge\\ladrParser.py',62),
  ('argument_list -> ( NAME','argument_list',2,'p_argument_list_atomic_1','C:\\Users\\10034888\\Workspace\\prover9nudge\\ladrParser.py',68),
  ('argument_list -> ( function_expression','argument_list',2,'p_argument_list_atomic_2','C:\\Users\\10034888\\Workspace\\prover9nudge\\ladrParser.py',74),
  ('argument_list -> argument_list , NAME','argument_list',3,'p_argument_list_molecular_1','C:\\Users\\10034888\\Workspace\\prover9nudge\\ladrParser.py',78),
  ('argument_list -> argument_list , function_expression','argument_list',3,'p_argument_list_molecular_2','C:\\Users\\10034888\\Workspace\\prover9nudge\\ladrParser.py',83),
  ('finished_argument_list -> argument_list )','finished_argument_list',2,'p_finished_argument_list','C:\\Users\\10034888\\Workspace\\prover9nudge\\ladrParser.py',87),
]
